---
import { config } from '../../astro.config.mjs';
import Link from './Link.astro';
const { brand } = config;
import DarkModeToggle from './DarkModeToggle.astro';
interface Props {
    floating?: boolean;
    center?: boolean;
    auth?: boolean;
    navItems?: Record<string, string>[];
    shadow?: boolean;
}

const { floating, center, shadow = false } = Astro.props;
let navItems = Astro.props.navItems;
if (!navItems) {
    navItems = [

        { text: 'Item 1' },
        { text: 'Item 2' },
        { text: 'Item 3' },
        {
            href: '/',
            text: 'Item 4'
        }
    ]
}

const shadowClass = shadow ? 'shadow' : '';

const navClasses = ['navbar navbar-expand-lg'];
if (!center && floating) {
    navClasses.push('w-75', 'mx-auto');
}
if (center && floating) {
    navClasses.push('w-50','mx-auto');
}
if (!floating) {
    navClasses.push(shadowClass)
}


const containerClasses =  ['container'];
if (floating) {
    containerClasses.push('text-bg-dark p-3 rounded-3', shadowClass);
}
if (center) containerClasses.push('vstack');

/**
 * @TODO
 * - Fix darkmode toggle position on centered
 * 
 */
---
<nav class:list={navClasses}>
    <div class:list={containerClasses}>
        <Link href="/" class="navbar-brand ps-3 pe-2">
            {brand.logo ? <img src={brand.logo} alt={brand.text} /> : brand.text}
        </Link>
        <div class="collapse navbar-collapse">
            <ul class="navbar-nav">
                {navItems.map(item => <li class="nav-item">
                    {item?.href ? <Link class="nav-link" href={item.href}>{item?.text}</Link> : <span class="nav-link">{item.text}</span>}
                </li>)}
            </ul>
        </div>
        <DarkModeToggle />
    </div>
</nav>
